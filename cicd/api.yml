trigger:
- main
- feature/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  system.debug: true

stages:
  - stage: build

    jobs:
      - job: build
        steps:
        - task: UseDotNet@2
          inputs:
            packageType: 'sdk'
            version: '3.1.x'
          displayName: 'Set SDK to 3.1.x'

        - task: DotNetCoreCLI@2
          inputs:
            command: 'build'
            projects: '$(Build.SourcesDirectory)/backend/backend.csproj'
          displayName: 'Build backend service'

        - task: DotNetCoreCLI@2
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '$(Build.SourcesDirectory)/backend/backend.csproj'
            arguments: '-o $(Build.ArtifactStagingDirectory)'
          displayName: 'dotnet publish'
          condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'
          condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Build.SourcesDirectory)/infrastructure'
            artifact: 'infrastructure'
            publishLocation: 'pipeline'
          condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

  - stage: prereqs

    jobs:
      - job: prereqs
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

        steps:
        
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'current'
            artifactName: 'infrastructure'
            targetPath: '$(System.DefaultWorkingDirectory)'

        - task: AzureResourceManagerTemplateDeployment@3
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'GitWatcher'
            subscriptionId: '$(SUBSCRIPTIONID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: 'azl-tfstate-shared-uks-rg'
            location: 'UK South'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infrastructure/state-backend/state-backend.azuredeploy.json'
            deploymentMode: 'Incremental'
     